#!/bin/bash

set -eu

usage_exit() {
    echo "Usage: $0 -o imagefile -m message -h height_char." 1>&2
    exit 1
}

while getopts ad:h:m:o: OPT
do
    case $OPT in
        a)  FLAG_A=1
            ;;
        o)  OUTIMAGE=$OPTARG
            ;;
        h)  HEIGHT=$OPTARG
            ;;
        m)  MSG=$OPTARG
            ;;
        \?) usage_exit
            ;;
    esac
done

shift $((OPTIND - 1))

echo "$OUTIMAGE;$HEIGHT;$MSG"


if [ "$OUTIMAGE" = "" -o "$HEIGHT" = "" -o "$MSG" = "" ] ; then
    usage_exit
fi

function set_font {
    FONTLIST=fontlist
    sort -R $FONTLIST | head -1
}

#FONT=`convert -list font|grep ttf | grep -v droid | grep takao |sort -R | head -1| awk '{print $2}'`

FOREGROUND_COLOR=`printf "#%03x" $(($RANDOM % 4096))`
COLORFILE=/tmp/color
FONT=`set_font`

##############
##  文字を画像化する
##############

function create_text_image {
    convert \
	      -background "#000" \
	      -fill "$FOREGROUND_COLOR" \
	      -depth 8 \
	      -pointsize $HEIGHT \
	      -font $FONT \
	      label:"$MSG" $OUTIMAGE
}

create_text_image

##############
## 上端に色線を引く
## $1 : カラーコード

function draw_indicator {

	W=`/usr/bin/identify -format "%w" $OUTIMAGE`
	H=`/usr/bin/identify -format "%h" $OUTIMAGE`

	W1=$(($W - 1))

	#			-strokewidth 1 \ # vertical line
	#			-stroke "#f00" \
	#			-draw "line $W1,0 $W1,$H" \

	mogrify \
			-fill "$1" \
			-draw "rectangle 0,0 $W1,0" \
			${OUTIMAGE}

}

function get_line_color {
    TYPE=`cat $COLORFILE`
    case $TYPE in

        1)
		        COLOR="#f00"
		        ;;
        2)
		        COLOR="#4f0"
		        ;;
        3)
		        COLOR="#04f"
	          ;;
        *)
		        COLOR="#fff"
    esac
    echo $COLOR
}

LINE_COLOR=`get_line_color`
draw_indicator $LINE_COLOR
